package com.simplerishta.cms.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class VerifiableAttributesAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVerifiableAttributesAllPropertiesEquals(VerifiableAttributes expected, VerifiableAttributes actual) {
        assertVerifiableAttributesAutoGeneratedPropertiesEquals(expected, actual);
        assertVerifiableAttributesAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVerifiableAttributesAllUpdatablePropertiesEquals(VerifiableAttributes expected, VerifiableAttributes actual) {
        assertVerifiableAttributesUpdatableFieldsEquals(expected, actual);
        assertVerifiableAttributesUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVerifiableAttributesAutoGeneratedPropertiesEquals(VerifiableAttributes expected, VerifiableAttributes actual) {
        assertThat(expected)
            .as("Verify VerifiableAttributes auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVerifiableAttributesUpdatableFieldsEquals(VerifiableAttributes expected, VerifiableAttributes actual) {
        assertThat(expected)
            .as("Verify VerifiableAttributes relevant properties")
            .satisfies(e -> assertThat(e.getName()).as("check name").isEqualTo(actual.getName()))
            .satisfies(e -> assertThat(e.getCreatedBy()).as("check createdBy").isEqualTo(actual.getCreatedBy()))
            .satisfies(e -> assertThat(e.getCreatedAt()).as("check createdAt").isEqualTo(actual.getCreatedAt()))
            .satisfies(e -> assertThat(e.getUpdatedAt()).as("check updatedAt").isEqualTo(actual.getUpdatedAt()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVerifiableAttributesUpdatableRelationshipsEquals(VerifiableAttributes expected, VerifiableAttributes actual) {
        // empty method
    }
}
