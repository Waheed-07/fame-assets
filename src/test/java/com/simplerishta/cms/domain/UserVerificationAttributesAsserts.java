package com.simplerishta.cms.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class UserVerificationAttributesAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserVerificationAttributesAllPropertiesEquals(
        UserVerificationAttributes expected,
        UserVerificationAttributes actual
    ) {
        assertUserVerificationAttributesAutoGeneratedPropertiesEquals(expected, actual);
        assertUserVerificationAttributesAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserVerificationAttributesAllUpdatablePropertiesEquals(
        UserVerificationAttributes expected,
        UserVerificationAttributes actual
    ) {
        assertUserVerificationAttributesUpdatableFieldsEquals(expected, actual);
        assertUserVerificationAttributesUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserVerificationAttributesAutoGeneratedPropertiesEquals(
        UserVerificationAttributes expected,
        UserVerificationAttributes actual
    ) {
        assertThat(expected)
            .as("Verify UserVerificationAttributes auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserVerificationAttributesUpdatableFieldsEquals(
        UserVerificationAttributes expected,
        UserVerificationAttributes actual
    ) {
        assertThat(expected)
            .as("Verify UserVerificationAttributes relevant properties")
            .satisfies(e -> assertThat(e.getDocumentType()).as("check documentType").isEqualTo(actual.getDocumentType()))
            .satisfies(e -> assertThat(e.getDocumentUrl()).as("check documentUrl").isEqualTo(actual.getDocumentUrl()))
            .satisfies(e -> assertThat(e.getStatus()).as("check status").isEqualTo(actual.getStatus()))
            .satisfies(e -> assertThat(e.getVerificationToken()).as("check verificationToken").isEqualTo(actual.getVerificationToken()))
            .satisfies(e -> assertThat(e.getLastActionDate()).as("check lastActionDate").isEqualTo(actual.getLastActionDate()))
            .satisfies(e -> assertThat(e.getCreatedAt()).as("check createdAt").isEqualTo(actual.getCreatedAt()))
            .satisfies(e -> assertThat(e.getUpdatedAt()).as("check updatedAt").isEqualTo(actual.getUpdatedAt()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserVerificationAttributesUpdatableRelationshipsEquals(
        UserVerificationAttributes expected,
        UserVerificationAttributes actual
    ) {
        // empty method
    }
}
